// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class CALayer;
@class NSCoder;

SWIFT_CLASS("_TtC17EZSwiftExtensions11BlockButton")
@interface BlockButton : UIButton
@property (nonatomic, strong) CALayer * __nullable highlightLayer;
@property (nonatomic, copy) void (^ __nullable action)(BlockButton * __nonnull);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h action:(void (^ __nullable)(BlockButton * __nonnull))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAction:(void (^ __nonnull)(BlockButton * __nonnull))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame action:(void (^ __nonnull)(BlockButton * __nonnull))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addAction:(void (^ __nonnull)(BlockButton * __nonnull))action;
- (void)didPressed:(BlockButton * __nonnull)sender;
- (void)highlight;
- (void)unhighlight;
@end


SWIFT_CLASS("_TtC17EZSwiftExtensions14BlockLongPress")
@interface BlockLongPress : UILongPressGestureRecognizer
- (nonnull instancetype)initWithTarget:(id __nullable)target action:(SEL __null_unspecified)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAction:(void (^ __nullable)(UILongPressGestureRecognizer * __nonnull))action;
- (void)didLongPressed:(UILongPressGestureRecognizer * __nonnull)longPress;
@end


SWIFT_CLASS("_TtC17EZSwiftExtensions8BlockPan")
@interface BlockPan : UIPanGestureRecognizer
- (nonnull instancetype)initWithTarget:(id __nullable)target action:(SEL __null_unspecified)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAction:(void (^ __nullable)(UIPanGestureRecognizer * __nonnull))action;
- (void)didPan:(UIPanGestureRecognizer * __nonnull)pan;
@end


SWIFT_CLASS("_TtC17EZSwiftExtensions10BlockPinch")
@interface BlockPinch : UIPinchGestureRecognizer
- (nonnull instancetype)initWithTarget:(id __nullable)target action:(SEL __null_unspecified)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAction:(void (^ __nullable)(UIPinchGestureRecognizer * __nonnull))action;
- (void)didPinch:(UIPinchGestureRecognizer * __nonnull)pinch;
@end


SWIFT_CLASS("_TtC17EZSwiftExtensions10BlockSwipe")
@interface BlockSwipe : UISwipeGestureRecognizer
- (nonnull instancetype)initWithTarget:(id __nullable)target action:(SEL __null_unspecified)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDirection:(UISwipeGestureRecognizerDirection)direction fingerCount:(NSInteger)fingerCount action:(void (^ __nullable)(UISwipeGestureRecognizer * __nonnull))action;
- (void)didSwipe:(UISwipeGestureRecognizer * __nonnull)swipe;
@end


SWIFT_CLASS("_TtC17EZSwiftExtensions8BlockTap")
@interface BlockTap : UITapGestureRecognizer
- (nonnull instancetype)initWithTarget:(id __nullable)target action:(SEL __null_unspecified)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTapCount:(NSInteger)tapCount fingerCount:(NSInteger)fingerCount action:(void (^ __nullable)(UITapGestureRecognizer * __nonnull))action;
- (void)didTap:(UITapGestureRecognizer * __nonnull)tap;
@end

@class NSURLRequest;
@class NSError;

SWIFT_CLASS("_TtC17EZSwiftExtensions12BlockWebView")
@interface BlockWebView : UIWebView <UIWebViewDelegate>
@property (nonatomic, copy) void (^ __nullable didStartLoad)(NSURLRequest * __nonnull);
@property (nonatomic, copy) void (^ __nullable didFinishLoad)(NSURLRequest * __nonnull);
@property (nonatomic, copy) void (^ __nullable didFailLoad)(NSURLRequest * __nonnull, NSError * __nonnull);
@property (nonatomic, copy) BOOL (^ __nullable shouldStartLoadingRequest)(NSURLRequest * __nonnull);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)webViewDidStartLoad:(UIWebView * __nonnull)webView;
- (void)webViewDidFinishLoad:(UIWebView * __nonnull)webView;
- (void)webView:(UIWebView * __nonnull)webView didFailLoadWithError:(NSError * __nullable)error;
- (BOOL)webView:(UIWebView * __nonnull)webView shouldStartLoadWithRequest:(NSURLRequest * __nonnull)request navigationType:(UIWebViewNavigationType)navigationType;
@end


@interface NSDate (SWIFT_EXTENSION(EZSwiftExtensions))
@end


@interface NSDate (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (NSString * __nonnull)toString;

/// EZSwiftExtensions
- (NSDate * __nullable)fromString:(NSString * __nonnull)format string:(NSString * __nonnull)string;

/// EZSwiftExtensions
- (double)daysInBetweenDate:(NSDate * __nonnull)date;

/// EZSwiftExtensions
- (double)hoursInBetweenDate:(NSDate * __nonnull)date;

/// EZSwiftExtensions
- (double)minutesInBetweenDate:(NSDate * __nonnull)date;

/// EZSwiftExtensions
- (double)secondsInBetweenDate:(NSDate * __nonnull)date;

/// EZSwiftExtensions
- (NSString * __nonnull)timePassed;
@end


@interface NSObject (SWIFT_EXTENSION(EZSwiftExtensions))
@property (nonatomic, readonly, copy) NSString * __nonnull className;
+ (NSString * __nonnull)className;
@end


@interface NSUserDefaults (SWIFT_EXTENSION(EZSwiftExtensions))
@end

@class UIColor;

@interface UIButton (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h target:(id __nonnull)target action:(SEL __null_unspecified)action;

/// EZSwiftExtensions
- (void)setBackgroundColor:(UIColor * __nonnull)color forState:(UIControlState)forState;
@end


@interface UIColor (SWIFT_EXTENSION(EZSwiftExtensions))
@end


@interface UIColor (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (nonnull instancetype)initWithR:(CGFloat)r g:(CGFloat)g b:(CGFloat)b;

/// EZSwiftExtensions
- (nonnull instancetype)initWithR:(CGFloat)r g:(CGFloat)g b:(CGFloat)b a:(CGFloat)a;

/// EZSwiftExtensions
- (nonnull instancetype)initWithHex:(NSInteger)hex alpha:(CGFloat)alpha;

/// EZSwiftExtensions
- (nullable instancetype)initWithHexString:(NSString * __nonnull)hexString alpha:(CGFloat)alpha;

/// EZSwiftExtensions
+ (UIColor * __nonnull)Gray:(CGFloat)gray;

/// EZSwiftExtensions
+ (UIColor * __nonnull)Gray:(CGFloat)gray alpha:(CGFloat)alpha;

/// EZSwiftExtensions
@property (nonatomic, readonly) NSInteger redComponent;

/// EZSwiftExtensions
@property (nonatomic, readonly) NSInteger greenComponent;

/// EZSwiftExtensions
@property (nonatomic, readonly) NSInteger blueComponent;

/// EZSwiftExtensions
@property (nonatomic, readonly) NSInteger alpha;
@end


@interface UIDevice (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
+ (NSString * __nonnull)idForVendor;

/// EZSwiftExtensions - Operating system name
+ (NSString * __nonnull)systemName;

/// EZSwiftExtensions - Operating system version
+ (NSString * __nonnull)systemVersion;

/// EZSwiftExtensions
+ (NSString * __nonnull)deviceName;

/// EZSwiftExtensions
+ (NSString * __nonnull)deviceLanguage;

/// EZSwiftExtensions
+ (NSString * __nonnull)deviceModelReadable;

/// EZSwiftExtensions
+ (NSString * __nonnull)deviceModel;

/// EZSwiftExtensions
+ (BOOL)isSystemVersionOver:(NSString * __nonnull)requiredVersion;
@end


@interface UIFont (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
+ (UIFont * __nonnull)AvenirNextDemiBoldWithSize:(CGFloat)size;

/// EZSwiftExtensions
+ (UIFont * __nonnull)AvenirNextRegularWithSize:(CGFloat)size;
@end

@class NSData;

@interface UIImage (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions - rate: 0 to 1
- (NSData * __nonnull)compressImageWithRate:(CGFloat)rate;

/// EZSwiftExtensions
- (NSInteger)getSizeAsBytes;

/// EZSwiftExtensions
- (NSInteger)getSizeAsKilobytes;

/// EZSwiftExtensions
+ (UIImage * __nonnull)scaleToImage:(UIImage * __nonnull)image w:(CGFloat)w h:(CGFloat)h;

/// EZSwiftExtensions, might return low quality
- (UIImage * __nonnull)resizeWithWidth:(CGFloat)width;

/// EZSwiftExtensions, might return low quality
- (UIImage * __nonnull)resizeWithHeight:(CGFloat)height;

/// EZSwiftExtensions
- (CGFloat)aspectHeightForWidth:(CGFloat)width;

/// EZSwiftExtensions
- (CGFloat)aspectWidthForHeight:(CGFloat)height;

/// EZSwiftExtensions
- (UIImage * __nonnull)croppedImage:(CGRect)bound;
@end


@interface UIImageView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h imageName:(NSString * __nonnull)imageName;

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y imageName:(NSString * __nonnull)imageName scaleToWidth:(CGFloat)scaleToWidth;

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h image:(UIImage * __nonnull)image;

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y image:(UIImage * __nonnull)image scaleToWidth:(CGFloat)scaleToWidth;

/// EZSwiftExtensions, scales this ImageView size to fit the given width
- (void)scaleImageFrameToWidthWithWidth:(CGFloat)width;

/// EZSwiftExtensions
- (void)roundSquareImage;

/// EZSwiftExtensions
- (void)imageWithUrlWithUrl:(NSString * __nonnull)url;

/// EZSwiftExtensions
- (void)imageWithUrlWithUrl:(NSString * __nonnull)url placeholder:(UIImage * __nonnull)placeholder;

/// EZSwiftExtensions
- (void)imageWithUrlWithUrl:(NSString * __nonnull)url placeholderNamed:(NSString * __nonnull)placeholderNamed;
@end


@interface UILabel (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions: fontSize: 17
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h;

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h fontSize:(CGFloat)fontSize;

/// EZSwiftExtensions
- (CGSize)getEstimatedSize:(CGFloat)width height:(CGFloat)height;

/// EZSwiftExtensions
- (CGFloat)getEstimatedHeight;

/// EZSwiftExtensions
- (CGFloat)getEstimatedWidth;

/// EZSwiftExtensions
- (void)fitHeight;

/// EZSwiftExtensions
- (void)fitWidth;

/// EZSwiftExtensions
- (void)fitSize;
@end


@interface UITextView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions: Automatically sets these values: backgroundColor = clearColor, textColor = ThemeNicknameColor, clipsToBounds = true, textAlignment = Left, userInteractionEnabled = true, editable = false, scrollEnabled = false, font = ThemeFontName, fontsize = 17
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h;

/// EZSwiftExtensions: Automatically sets these values: backgroundColor = clearColor, textColor = ThemeNicknameColor, clipsToBounds = true, textAlignment = Left, userInteractionEnabled = true, editable = false, scrollEnabled = false, font = ThemeFontName
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h fontSize:(CGFloat)fontSize;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
///
/// <code>Shakes the view for as many number of times as given in the argument
/// 
/// </code>
- (void)shakeViewForTimes:(NSInteger)times;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (UIImage * __nonnull)toImage;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions [UIRectCorner.TopLeft, UIRectCorner.TopRight]
- (void)roundCorners:(UIRectCorner)corners radius:(CGFloat)radius;

/// EZSwiftExtensions
- (void)round;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (nonnull instancetype)initWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h;

/// EZSwiftExtensions, puts padding around the view
- (nonnull instancetype)initWithSuperView:(UIView * __nonnull)superView padding:(CGFloat)padding;

/// EZSwiftExtensions - Copies size of superview
- (nonnull instancetype)initWithSuperView:(UIView * __nonnull)superView;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (void)setRotationX:(CGFloat)x;

/// EZSwiftExtensions
- (void)setRotationY:(CGFloat)y;

/// EZSwiftExtensions
- (void)setRotationZ:(CGFloat)z;

/// EZSwiftExtensions
- (void)setRotationWithX:(CGFloat)x y:(CGFloat)y z:(CGFloat)z;

/// EZSwiftExtensions
- (void)setScaleWithX:(CGFloat)x y:(CGFloat)y;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (void)springWithAnimations:(void (^ __nonnull)(void))animations completion:(void (^ __nullable)(BOOL))completion;

/// EZSwiftExtensions
- (void)springWithDuration:(NSTimeInterval)duration animations:(void (^ __nonnull)(void))animations completion:(void (^ __nullable)(BOOL))completion;

/// EZSwiftExtensions
- (void)animateWithDuration:(NSTimeInterval)duration animations:(void (^ __nonnull)(void))animations completion:(void (^ __nullable)(BOOL))completion;

/// EZSwiftExtensions
- (void)animateWithAnimations:(void (^ __nonnull)(void))animations completion:(void (^ __nullable)(BOOL))completion;

/// EZSwiftExtensions
- (void)pop;

/// EZSwiftExtensions
- (void)popBig;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// http://stackoverflow.com/questions/4660371/how-to-add-a-touch-event-to-a-uiview/32182866#32182866 EZSwiftExtensions
- (void)addTapGestureWithTapNumber:(NSInteger)tapNumber target:(id __nonnull)target action:(SEL __null_unspecified)action;

/// EZSwiftExtensions
- (void)addTapGestureWithTapNumber:(NSInteger)tapNumber action:(void (^ __nullable)(UITapGestureRecognizer * __nonnull))action;

/// EZSwiftExtensions
- (void)addSwipeGestureWithDirection:(UISwipeGestureRecognizerDirection)direction numberOfTouches:(NSInteger)numberOfTouches target:(id __nonnull)target action:(SEL __null_unspecified)action;

/// EZSwiftExtensions
- (void)addSwipeGestureWithDirection:(UISwipeGestureRecognizerDirection)direction numberOfTouches:(NSInteger)numberOfTouches action:(void (^ __nullable)(UISwipeGestureRecognizer * __nonnull))action;

/// EZSwiftExtensions
- (void)addPanGestureWithTarget:(id __nonnull)target action:(SEL __null_unspecified)action;

/// EZSwiftExtensions
- (void)addPanGestureWithAction:(void (^ __nullable)(UIPanGestureRecognizer * __nonnull))action;

/// EZSwiftExtensions
- (void)addPinchGestureWithTarget:(id __nonnull)target action:(SEL __null_unspecified)action;

/// EZSwiftExtensions
- (void)addPinchGestureWithAction:(void (^ __nullable)(UIPinchGestureRecognizer * __nonnull))action;

/// EZSwiftExtensions
- (void)addLongPressGestureWithTarget:(id __nonnull)target action:(SEL __null_unspecified)action;

/// EZSwiftExtensions
- (void)addLongPressGestureWithAction:(void (^ __nullable)(UILongPressGestureRecognizer * __nonnull))action;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions
- (void)setCornerRadiusWithRadius:(CGFloat)radius;

/// EZSwiftExtensions
- (void)addBorderWithWidth:(CGFloat)width color:(UIColor * __nonnull)color;

/// EZSwiftExtensions
- (void)addBorderTopWithSize:(CGFloat)size color:(UIColor * __nonnull)color;

/// EZSwiftExtensions
- (void)addBorderTopWithPaddingWithSize:(CGFloat)size color:(UIColor * __nonnull)color padding:(CGFloat)padding;

/// EZSwiftExtensions
- (void)addBorderBottomWithSize:(CGFloat)size color:(UIColor * __nonnull)color;

/// EZSwiftExtensions
- (void)addBorderLeftWithSize:(CGFloat)size color:(UIColor * __nonnull)color;

/// EZSwiftExtensions
- (void)addBorderRightWithSize:(CGFloat)size color:(UIColor * __nonnull)color;

/// EZSwiftExtensions
- (void)drawCircleWithFillColor:(UIColor * __nonnull)fillColor strokeColor:(UIColor * __nonnull)strokeColor strokeWidth:(CGFloat)strokeWidth;

/// EZSwiftExtensions
- (void)drawStrokeWithWidth:(CGFloat)width color:(UIColor * __nonnull)color;
@end


@interface UIView (SWIFT_EXTENSION(EZSwiftExtensions))

/// EZSwiftExtensions, resizes this view so it fits the largest subview
- (void)resizeToFitSubviews;

/// EZSwiftExtensions, resizes this view so it fits the largest subview
- (void)resizeToFitSubviews:(NSArray<NSNumber *> * __nonnull)tagsToIgnore;

/// EZSwiftExtensions
- (void)resizeToFitWidth;

/// EZSwiftExtensions
- (void)resizeToFitHeight;

/// EZSwiftExtensions
@property (nonatomic) CGFloat x;

/// EZSwiftExtensions
@property (nonatomic) CGFloat y;

/// EZSwiftExtensions
@property (nonatomic) CGFloat w;

/// EZSwiftExtensions
@property (nonatomic) CGFloat h;

/// EZSwiftExtensions
@property (nonatomic) CGFloat left;

/// EZSwiftExtensions
@property (nonatomic) CGFloat right;

/// EZSwiftExtensions
@property (nonatomic) CGFloat top;

/// EZSwiftExtensions
@property (nonatomic) CGFloat bottom;

/// EZSwiftExtensions
@property (nonatomic) CGPoint origin;

/// EZSwiftExtensions
@property (nonatomic) CGFloat centerX;

/// EZSwiftExtensions
@property (nonatomic) CGFloat centerY;

/// EZSwiftExtensions
@property (nonatomic) CGSize size;

/// EZSwiftExtensions
- (CGFloat)leftOffset:(CGFloat)offset;

/// EZSwiftExtensions
- (CGFloat)rightOffset:(CGFloat)offset;

/// EZSwiftExtensions
- (CGFloat)topOffset:(CGFloat)offset;

/// EZSwiftExtensions
- (CGFloat)bottomOffset:(CGFloat)offset;

/// EZSwiftExtensions
- (CGFloat)alignRight:(CGFloat)offset;

/// EZSwiftExtensions
- (CGFloat)reorderSubViews:(BOOL)reorder tagsToIgnore:(NSArray<NSNumber *> * __nonnull)tagsToIgnore;
- (void)removeSubviews;
@end

@class NSNotification;
@class UINavigationBar;

@interface UIViewController (SWIFT_EXTENSION(EZSwiftExtensions))
- (void)addNotificationObserver:(NSString * __nonnull)name selector:(SEL __null_unspecified)selector;
- (void)removeNotificationObserver:(NSString * __nonnull)name;
- (void)removeNotificationObserver;
- (void)addKeyboardWillShowNotification;
- (void)addKeyboardDidShowNotification;
- (void)addKeyboardWillHideNotification;
- (void)addKeyboardDidHideNotification;
- (void)removeKeyboardWillShowNotification;
- (void)removeKeyboardDidShowNotification;
- (void)removeKeyboardWillHideNotification;
- (void)removeKeyboardDidHideNotification;
- (void)keyboardDidShowNotification:(NSNotification * __nonnull)notification;
- (void)keyboardWillShowNotification:(NSNotification * __nonnull)notification;
- (void)keyboardWillHideNotification:(NSNotification * __nonnull)notification;
- (void)keyboardDidHideNotification:(NSNotification * __nonnull)notification;
- (void)keyboardWillShowWithFrame:(CGRect)frame;
- (void)keyboardDidShowWithFrame:(CGRect)frame;
- (void)keyboardWillHideWithFrame:(CGRect)frame;
- (void)keyboardDidHideWithFrame:(CGRect)frame;

/// EZSwiftExtensions
@property (nonatomic, readonly) CGFloat top;

/// EZSwiftExtensions
@property (nonatomic, readonly) CGFloat bottom;

/// EZSwiftExtensions
@property (nonatomic, readonly) CGFloat tabBarHeight;

/// EZSwiftExtensions
@property (nonatomic, readonly) CGFloat navigationBarHeight;

/// EZSwiftExtensions
@property (nonatomic, strong) UIColor * __nullable navigationBarColor;

/// EZSwiftExtensions
@property (nonatomic, readonly, strong) UINavigationBar * __nullable navBar;

/// EZSwiftExtensions
@property (nonatomic, readonly) CGRect applicationFrame;

/// EZSwiftExtensions
- (void)pushVC:(UIViewController * __nonnull)vc;

/// EZSwiftExtensions
- (void)popVC;

/// EZSwiftExtensions
- (void)presentVC:(UIViewController * __nonnull)vc;

/// EZSwiftExtensions
- (void)dismissVCWithCompletion:(void (^ __nullable)(void))completion;

/// EZSwiftExtensions
- (void)addAsChildViewController:(UIViewController * __nonnull)vc toView:(UIView * __nonnull)toView;
@end

#pragma clang diagnostic pop
